name: Test
on: push

env:
  APP_NAME: 'abc'

jobs:
  one:
    id: one
    runs-on: ubuntu-16.04
    steps:
      - run: echo "::set-env name=APP_NAME::xyz"
      - run: echo ${{ env.APP_NAME }}

  # next:
  #   runs-on: ubuntu-16.04
  #   steps:
  #     - run: echo "${{ one.env.APP_NAME }}"

  two:
    runs-on: ubuntu-16.04
    if: one.env.APP_NAME == 'abc'
    steps:
      - run: echo "abc"

  # three:
  #   runs-on: ubuntu-16.04
  #   if: jobs.one.env.APP_NAME == 'xyz'
  #   steps:
  #     - run: echo "xyz"

# name: Build and deploy

# on:
#   - push
    
# jobs:
#   az-login:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Azure login
#         uses: azure/login@v1
#         with:
#           creds: ${{ secrets.AZURE_CREDENTIALS }}

#   sdk-setup:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Setup .net core 2.2
#         uses: actions/setup-dotnet@v1
#         with:
#           dotnet-version: 2.2.402

#       - name: Setup .net core 3.0
#         uses: actions/setup-dotnet@v1
#         with:
#           dotnet-version: 3.0.100

#       - name: .net SxS
#         run: |
#           rsync -a ${DOTNET_ROOT/3.0.100/2.2.402}/* $DOTNET_ROOT/

#   infra:
#     runs-on: ubuntu-latest
#     needs: [az_login, sdk]
#     steps:
#       - name: Setup Pulumi CLI
#         run: |
#           curl https://get.pulumi.com | bash
#           echo "::add-path::$HOME/.pulumi/bin/"
        
#       - name: Execute pulumi up
#         working-directory: ./infra
#         run: |
#           pulumi stack select dev
#           pulumi up
#           echo "::set-env name=APP_NAME::$(pulumi stack output appName)"
#           echo "::set-env name=FUNC_NAME::$(pulumi stack output funcName)"
#         env:
#           PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

#       - name: Restore and build projects
#         run: |
#           dotnet restore
#           dotnet build -c release

#       - name: Publish web app
#         run: dotnet publish -c release -o publish/web src/App/App.csproj

#       - name: Publish func app
#         run: dotnet publish -c release -o publish/func src/Funcs/Funcs.csproj
        
#       - name: 'Deploy web app'
#         uses: azure/webapps-deploy@v1
#         with: 
#           app-name: ${{ env.APP_NAME }}
#           package: './publish/web' 
        
#       - name: 'Deploy func app'
#         uses: azure/functions-action@v1
#         with: 
#           app-name: ${{ env.FUNC_NAME }}
#           package: './publish/func' 

#       - name: logout
#         run: az logout